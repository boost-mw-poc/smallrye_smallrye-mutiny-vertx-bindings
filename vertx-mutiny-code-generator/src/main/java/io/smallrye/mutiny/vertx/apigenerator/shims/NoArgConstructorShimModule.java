package io.smallrye.mutiny.vertx.apigenerator.shims;

import com.github.javaparser.ast.type.TypeParameter;
import com.palantir.javapoet.MethodSpec;
import com.palantir.javapoet.TypeSpec;

import io.smallrye.mutiny.vertx.apigenerator.analysis.BaseShimConstructor;
import io.smallrye.mutiny.vertx.apigenerator.analysis.ShimClass;
import io.smallrye.mutiny.vertx.apigenerator.analysis.ShimModule;

/**
 * A module that declare a no-arg constructor used for CDI and other frameworks.
 */
public class NoArgConstructorShimModule implements ShimModule {
    @Override
    public boolean accept(ShimClass shim) {
        return shim.getSource().isConcrete();
    }

    @Override
    public void analyze(ShimClass shim) {
        shim.addConstructor(new NoArgConstructor(this, shim));
    }

    private static class NoArgConstructor extends BaseShimConstructor {
        public NoArgConstructor(ShimModule module, ShimClass shim) {
            super(module);
        }

        @Override
        public void generate(ShimClass shim, TypeSpec.Builder builder) {
            MethodSpec.Builder cst = MethodSpec.constructorBuilder()
                    .addJavadoc("Empty constructor used by CDI, do not use this constructor directly.");

            if (shim.getParentClass() != null) {
                cst.addStatement("super(null)");
            }
            cst.addComment("Generated by " + declaredBy().getClass().getName());
            cst.addStatement("this.delegate = null");
            int index = 0;
            for (TypeParameter ignored : shim.getSource().getTypeParameters()) {
                cst.addStatement("this.__typeArg_" + index + " = io.smallrye.mutiny.vertx.TypeArg.unknown()");
                index++;
            }
            builder.addMethod(cst.build());
        }
    }
}
